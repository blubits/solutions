#include <iostream>
#include <map>
using namespace std;

int main() {
    // thanks, python!
    map<int, string> eqs = {
        {16, "4 + 4 + 4 + 4"},  {8, "4 + 4 + 4 - 4"},   {24, "4 + 4 + 4 * 4"},
        {9, "4 + 4 + 4 / 4"},   {8, "4 + 4 - 4 + 4"},   {0, "4 + 4 - 4 - 4"},
        {-8, "4 + 4 - 4 * 4"},  {7, "4 + 4 - 4 / 4"},   {24, "4 + 4 * 4 + 4"},
        {16, "4 + 4 * 4 - 4"},  {68, "4 + 4 * 4 * 4"},  {8, "4 + 4 * 4 / 4"},
        {9, "4 + 4 / 4 + 4"},   {1, "4 + 4 / 4 - 4"},   {8, "4 + 4 / 4 * 4"},
        {4, "4 + 4 / 4 / 4"},   {8, "4 - 4 + 4 + 4"},   {0, "4 - 4 + 4 - 4"},
        {16, "4 - 4 + 4 * 4"},  {1, "4 - 4 + 4 / 4"},   {0, "4 - 4 - 4 + 4"},
        {-8, "4 - 4 - 4 - 4"},  {-16, "4 - 4 - 4 * 4"}, {-1, "4 - 4 - 4 / 4"},
        {-8, "4 - 4 * 4 + 4"},  {-16, "4 - 4 * 4 - 4"}, {-60, "4 - 4 * 4 * 4"},
        {0, "4 - 4 * 4 / 4"},   {7, "4 - 4 / 4 + 4"},   {-1, "4 - 4 / 4 - 4"},
        {0, "4 - 4 / 4 * 4"},   {4, "4 - 4 / 4 / 4"},   {24, "4 * 4 + 4 + 4"},
        {16, "4 * 4 + 4 - 4"},  {32, "4 * 4 + 4 * 4"},  {17, "4 * 4 + 4 / 4"},
        {16, "4 * 4 - 4 + 4"},  {8, "4 * 4 - 4 - 4"},   {0, "4 * 4 - 4 * 4"},
        {15, "4 * 4 - 4 / 4"},  {68, "4 * 4 * 4 + 4"},  {60, "4 * 4 * 4 - 4"},
        {256, "4 * 4 * 4 * 4"}, {16, "4 * 4 * 4 / 4"},  {8, "4 * 4 / 4 + 4"},
        {0, "4 * 4 / 4 - 4"},   {16, "4 * 4 / 4 * 4"},  {1, "4 * 4 / 4 / 4"},
        {9, "4 / 4 + 4 + 4"},   {1, "4 / 4 + 4 - 4"},   {17, "4 / 4 + 4 * 4"},
        {2, "4 / 4 + 4 / 4"},   {1, "4 / 4 - 4 + 4"},   {-7, "4 / 4 - 4 - 4"},
        {-15, "4 / 4 - 4 * 4"}, {0, "4 / 4 - 4 / 4"},   {8, "4 / 4 * 4 + 4"},
        {0, "4 / 4 * 4 - 4"},   {16, "4 / 4 * 4 * 4"},  {1, "4 / 4 * 4 / 4"},
        {4, "4 / 4 / 4 + 4"},   {-4, "4 / 4 / 4 - 4"},  {0, "4 / 4 / 4 * 4"},
        {0, "4 / 4 / 4 / 4"},
    };
    int t, k;
    cin >> t;
    while (t--) {
        cin >> k;
        if (eqs.find(k) != eqs.end()) {
            cout << eqs[k] << " = " << k << endl;
        } else {
            cout << "no solution" << endl;
        }
    }
    return 0;
}
